<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="AquaparkDataSet" targetNamespace="http://tempuri.org/AquaparkDataSet.xsd" xmlns:mstns="http://tempuri.org/AquaparkDataSet.xsd" xmlns="http://tempuri.org/AquaparkDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" GeneratorFunctionsComponentClassName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" UserFunctionsComponentName="QueriesTableAdapter" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="AquaparkConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="AquaparkConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DataBaseViewer.Properties.Settings.GlobalReference.Default.AquaparkConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BraceletsTableAdapter" GeneratorDataComponentClassName="BraceletsTableAdapter" Name="Bracelets" UserDataComponentName="BraceletsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AquaparkConnectionString (Settings)" DbObjectName="Aquapark.dbo.Bracelets" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Bracelets] WHERE (([Id] = @Original_Id) AND ([Deposit] = @Original_Deposit) AND ([DailyPaid] = @Original_DailyPaid))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Deposit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Deposit" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_DailyPaid" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="DailyPaid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Bracelets] ([Deposit], [DailyPaid]) VALUES (@Deposit, @DailyPaid);
SELECT Id, Deposit, DailyPaid FROM Bracelets WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Deposit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Deposit" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@DailyPaid" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="DailyPaid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Deposit, DailyPaid FROM dbo.Bracelets</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Bracelets] SET [Deposit] = @Deposit, [DailyPaid] = @DailyPaid WHERE (([Id] = @Original_Id) AND ([Deposit] = @Original_Deposit) AND ([DailyPaid] = @Original_DailyPaid));
SELECT Id, Deposit, DailyPaid FROM Bracelets WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Deposit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Deposit" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@DailyPaid" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="DailyPaid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Deposit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Deposit" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_DailyPaid" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="DailyPaid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="Aquapark.dbo.Bracelets" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Deposit" DataSetColumn="Deposit" />
              <Mapping SourceColumn="DailyPaid" DataSetColumn="DailyPaid" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ServicesTableAdapter" GeneratorDataComponentClassName="ServicesTableAdapter" Name="Services" UserDataComponentName="ServicesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AquaparkConnectionString (Settings)" DbObjectName="Aquapark.dbo.Services" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Services] WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name) AND ([Cost] = @Original_Cost))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Cost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cost" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Services] ([Name], [Cost]) VALUES (@Name, @Cost);
SELECT Id, Name, Cost FROM Services WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Cost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cost" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name, Cost FROM dbo.Services</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Services] SET [Name] = @Name, [Cost] = @Cost WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name) AND ([Cost] = @Original_Cost));
SELECT Id, Name, Cost FROM Services WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Cost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cost" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Cost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cost" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="Aquapark.dbo.Services" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Cost" DataSetColumn="Cost" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TransactionsTableAdapter" GeneratorDataComponentClassName="TransactionsTableAdapter" Name="Transactions" UserDataComponentName="TransactionsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AquaparkConnectionString (Settings)" DbObjectName="Aquapark.dbo.Transactions" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Transactions] WHERE (([Id] = @Original_Id) AND ([BraceletId] = @Original_BraceletId) AND ([ServiceId] = @Original_ServiceId) AND ((@IsNull_Status = 1 AND [Status] IS NULL) OR ([Status] = @Original_Status)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BraceletId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BraceletId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ServiceId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ServiceId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Status" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Status" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Status" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Status" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Transactions] ([BraceletId], [ServiceId], [Status]) VALUES (@BraceletId, @ServiceId, @Status);
SELECT Id, BraceletId, ServiceId, Status FROM Transactions WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BraceletId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BraceletId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ServiceId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ServiceId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Status" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Status" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, BraceletId, ServiceId, Status FROM dbo.Transactions</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Transactions] SET [BraceletId] = @BraceletId, [ServiceId] = @ServiceId, [Status] = @Status WHERE (([Id] = @Original_Id) AND ([BraceletId] = @Original_BraceletId) AND ([ServiceId] = @Original_ServiceId) AND ((@IsNull_Status = 1 AND [Status] IS NULL) OR ([Status] = @Original_Status)));
SELECT Id, BraceletId, ServiceId, Status FROM Transactions WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BraceletId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BraceletId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ServiceId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ServiceId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Status" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Status" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BraceletId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BraceletId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ServiceId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ServiceId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Status" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Status" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Status" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Status" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="Aquapark.dbo.Transactions" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="BraceletId" DataSetColumn="BraceletId" />
              <Mapping SourceColumn="ServiceId" DataSetColumn="ServiceId" />
              <Mapping SourceColumn="Status" DataSetColumn="Status" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ZonesTableAdapter" GeneratorDataComponentClassName="ZonesTableAdapter" Name="Zones" UserDataComponentName="ZonesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AquaparkConnectionString (Settings)" DbObjectName="Aquapark.dbo.Zones" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Zones] WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name) AND ([MinuteCost] = @Original_MinuteCost) AND ([DailyCost] = @Original_DailyCost))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MinuteCost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MinuteCost" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DailyCost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DailyCost" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Zones] ([Name], [MinuteCost], [DailyCost]) VALUES (@Name, @MinuteCost, @DailyCost);
SELECT Id, Name, MinuteCost, DailyCost FROM Zones WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MinuteCost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MinuteCost" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DailyCost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DailyCost" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Name, MinuteCost, DailyCost FROM dbo.Zones</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Zones] SET [Name] = @Name, [MinuteCost] = @MinuteCost, [DailyCost] = @DailyCost WHERE (([Id] = @Original_Id) AND ([Name] = @Original_Name) AND ([MinuteCost] = @Original_MinuteCost) AND ([DailyCost] = @Original_DailyCost));
SELECT Id, Name, MinuteCost, DailyCost FROM Zones WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MinuteCost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MinuteCost" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DailyCost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DailyCost" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MinuteCost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MinuteCost" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DailyCost" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DailyCost" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="Aquapark.dbo.Zones" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="MinuteCost" DataSetColumn="MinuteCost" />
              <Mapping SourceColumn="DailyCost" DataSetColumn="DailyCost" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ZoneVisitsTableAdapter" GeneratorDataComponentClassName="ZoneVisitsTableAdapter" Name="ZoneVisits" UserDataComponentName="ZoneVisitsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="AquaparkConnectionString (Settings)" DbObjectName="Aquapark.dbo.ZoneVisits" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ZoneVisits] WHERE (([Id] = @Original_Id) AND ([ZoneId] = @Original_ZoneId) AND ([BraceletId] = @Original_BraceletId) AND ([EnterTime] = @Original_EnterTime) AND ((@IsNull_ExitTime = 1 AND [ExitTime] IS NULL) OR ([ExitTime] = @Original_ExitTime)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ZoneId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ZoneId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BraceletId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BraceletId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_EnterTime" Precision="0" ProviderType="SmallDateTime" Scale="0" Size="0" SourceColumn="EnterTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ExitTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExitTime" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_ExitTime" Precision="0" ProviderType="SmallDateTime" Scale="0" Size="0" SourceColumn="ExitTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ZoneVisits] ([ZoneId], [BraceletId], [EnterTime], [ExitTime]) VALUES (@ZoneId, @BraceletId, @EnterTime, @ExitTime);
SELECT Id, ZoneId, BraceletId, EnterTime, ExitTime FROM ZoneVisits WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ZoneId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ZoneId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BraceletId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BraceletId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@EnterTime" Precision="0" ProviderType="SmallDateTime" Scale="0" Size="0" SourceColumn="EnterTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@ExitTime" Precision="0" ProviderType="SmallDateTime" Scale="0" Size="0" SourceColumn="ExitTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, ZoneId, BraceletId, EnterTime, ExitTime FROM dbo.ZoneVisits</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ZoneVisits] SET [ZoneId] = @ZoneId, [BraceletId] = @BraceletId, [EnterTime] = @EnterTime, [ExitTime] = @ExitTime WHERE (([Id] = @Original_Id) AND ([ZoneId] = @Original_ZoneId) AND ([BraceletId] = @Original_BraceletId) AND ([EnterTime] = @Original_EnterTime) AND ((@IsNull_ExitTime = 1 AND [ExitTime] IS NULL) OR ([ExitTime] = @Original_ExitTime)));
SELECT Id, ZoneId, BraceletId, EnterTime, ExitTime FROM ZoneVisits WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ZoneId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ZoneId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BraceletId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BraceletId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@EnterTime" Precision="0" ProviderType="SmallDateTime" Scale="0" Size="0" SourceColumn="EnterTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@ExitTime" Precision="0" ProviderType="SmallDateTime" Scale="0" Size="0" SourceColumn="ExitTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ZoneId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ZoneId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BraceletId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BraceletId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_EnterTime" Precision="0" ProviderType="SmallDateTime" Scale="0" Size="0" SourceColumn="EnterTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ExitTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ExitTime" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_ExitTime" Precision="0" ProviderType="SmallDateTime" Scale="0" Size="0" SourceColumn="ExitTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="Aquapark.dbo.ZoneVisits" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="ZoneId" DataSetColumn="ZoneId" />
              <Mapping SourceColumn="BraceletId" DataSetColumn="BraceletId" />
              <Mapping SourceColumn="EnterTime" DataSetColumn="EnterTime" />
              <Mapping SourceColumn="ExitTime" DataSetColumn="ExitTime" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources>
          <DbSource ConnectionRef="AquaparkConnectionString (Settings)" DbObjectName="Aquapark.dbo.AddZoneVisit" DbObjectType="StoredProcedure" GenerateShortCommands="true" GeneratorSourceName="AddZoneVisit" MethodsParameterType="CLR" Modifier="Public" Name="AddZoneVisit" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="AddZoneVisit">
            <SelectCommand>
              <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                <CommandText>dbo.AddZoneVisit</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ZoneId" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@BraceletId" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
          <DbSource ConnectionRef="AquaparkConnectionString (Settings)" DbObjectName="Aquapark.dbo.ReplenishBalance" DbObjectType="StoredProcedure" GenerateShortCommands="true" GeneratorSourceName="ReplenishBalance" MethodsParameterType="CLR" Modifier="Public" Name="ReplenishBalance" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="ReplenishBalance">
            <SelectCommand>
              <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                <CommandText>dbo.ReplenishBalance</CommandText>
                <Parameters>
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@BraceletId" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                  <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AdditionalBalance" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                </Parameters>
              </DbCommand>
            </SelectCommand>
          </DbSource>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="AquaparkDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="AquaparkDataSet" msprop:Generator_DataSetName="AquaparkDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Bracelets" msprop:Generator_RowEvHandlerName="BraceletsRowChangeEventHandler" msprop:Generator_RowDeletedName="BraceletsRowDeleted" msprop:Generator_RowDeletingName="BraceletsRowDeleting" msprop:Generator_RowEvArgName="BraceletsRowChangeEvent" msprop:Generator_TablePropName="Bracelets" msprop:Generator_RowChangedName="BraceletsRowChanged" msprop:Generator_RowChangingName="BraceletsRowChanging" msprop:Generator_TableClassName="BraceletsDataTable" msprop:Generator_RowClassName="BraceletsRow" msprop:Generator_TableVarName="tableBracelets" msprop:Generator_UserTableName="Bracelets">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Deposit" msprop:Generator_ColumnPropNameInRow="Deposit" msprop:Generator_ColumnPropNameInTable="DepositColumn" msprop:Generator_ColumnVarNameInTable="columnDeposit" msprop:Generator_UserColumnName="Deposit" type="xs:int" />
              <xs:element name="DailyPaid" msprop:Generator_ColumnPropNameInRow="DailyPaid" msprop:Generator_ColumnPropNameInTable="DailyPaidColumn" msprop:Generator_ColumnVarNameInTable="columnDailyPaid" msprop:Generator_UserColumnName="DailyPaid" type="xs:boolean" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Services" msprop:Generator_RowEvHandlerName="ServicesRowChangeEventHandler" msprop:Generator_RowDeletedName="ServicesRowDeleted" msprop:Generator_RowDeletingName="ServicesRowDeleting" msprop:Generator_RowEvArgName="ServicesRowChangeEvent" msprop:Generator_TablePropName="Services" msprop:Generator_RowChangedName="ServicesRowChanged" msprop:Generator_RowChangingName="ServicesRowChanging" msprop:Generator_TableClassName="ServicesDataTable" msprop:Generator_RowClassName="ServicesRow" msprop:Generator_TableVarName="tableServices" msprop:Generator_UserTableName="Services">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="128" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Cost" msprop:Generator_ColumnPropNameInRow="Cost" msprop:Generator_ColumnPropNameInTable="CostColumn" msprop:Generator_ColumnVarNameInTable="columnCost" msprop:Generator_UserColumnName="Cost" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Transactions" msprop:Generator_RowEvHandlerName="TransactionsRowChangeEventHandler" msprop:Generator_RowDeletedName="TransactionsRowDeleted" msprop:Generator_RowDeletingName="TransactionsRowDeleting" msprop:Generator_RowEvArgName="TransactionsRowChangeEvent" msprop:Generator_TablePropName="Transactions" msprop:Generator_RowChangedName="TransactionsRowChanged" msprop:Generator_RowChangingName="TransactionsRowChanging" msprop:Generator_TableClassName="TransactionsDataTable" msprop:Generator_RowClassName="TransactionsRow" msprop:Generator_TableVarName="tableTransactions" msprop:Generator_UserTableName="Transactions">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="BraceletId" msprop:Generator_ColumnPropNameInRow="BraceletId" msprop:Generator_ColumnPropNameInTable="BraceletIdColumn" msprop:Generator_ColumnVarNameInTable="columnBraceletId" msprop:Generator_UserColumnName="BraceletId" type="xs:int" />
              <xs:element name="ServiceId" msprop:Generator_ColumnPropNameInRow="ServiceId" msprop:Generator_ColumnPropNameInTable="ServiceIdColumn" msprop:Generator_ColumnVarNameInTable="columnServiceId" msprop:Generator_UserColumnName="ServiceId" type="xs:int" />
              <xs:element name="Status" msprop:Generator_ColumnPropNameInRow="Status" msprop:Generator_ColumnPropNameInTable="StatusColumn" msprop:Generator_ColumnVarNameInTable="columnStatus" msprop:Generator_UserColumnName="Status" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="7" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Zones" msprop:Generator_RowEvHandlerName="ZonesRowChangeEventHandler" msprop:Generator_RowDeletedName="ZonesRowDeleted" msprop:Generator_RowDeletingName="ZonesRowDeleting" msprop:Generator_RowEvArgName="ZonesRowChangeEvent" msprop:Generator_TablePropName="Zones" msprop:Generator_RowChangedName="ZonesRowChanged" msprop:Generator_RowChangingName="ZonesRowChanging" msprop:Generator_TableClassName="ZonesDataTable" msprop:Generator_RowClassName="ZonesRow" msprop:Generator_TableVarName="tableZones" msprop:Generator_UserTableName="Zones">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="128" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MinuteCost" msprop:Generator_ColumnPropNameInRow="MinuteCost" msprop:Generator_ColumnPropNameInTable="MinuteCostColumn" msprop:Generator_ColumnVarNameInTable="columnMinuteCost" msprop:Generator_UserColumnName="MinuteCost" type="xs:int" />
              <xs:element name="DailyCost" msprop:Generator_ColumnPropNameInRow="DailyCost" msprop:Generator_ColumnPropNameInTable="DailyCostColumn" msprop:Generator_ColumnVarNameInTable="columnDailyCost" msprop:Generator_UserColumnName="DailyCost" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ZoneVisits" msprop:Generator_RowEvHandlerName="ZoneVisitsRowChangeEventHandler" msprop:Generator_RowDeletedName="ZoneVisitsRowDeleted" msprop:Generator_RowDeletingName="ZoneVisitsRowDeleting" msprop:Generator_RowEvArgName="ZoneVisitsRowChangeEvent" msprop:Generator_TablePropName="ZoneVisits" msprop:Generator_RowChangedName="ZoneVisitsRowChanged" msprop:Generator_RowChangingName="ZoneVisitsRowChanging" msprop:Generator_TableClassName="ZoneVisitsDataTable" msprop:Generator_RowClassName="ZoneVisitsRow" msprop:Generator_TableVarName="tableZoneVisits" msprop:Generator_UserTableName="ZoneVisits">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="ZoneId" msprop:Generator_ColumnPropNameInRow="ZoneId" msprop:Generator_ColumnPropNameInTable="ZoneIdColumn" msprop:Generator_ColumnVarNameInTable="columnZoneId" msprop:Generator_UserColumnName="ZoneId" type="xs:int" />
              <xs:element name="BraceletId" msprop:Generator_ColumnPropNameInRow="BraceletId" msprop:Generator_ColumnPropNameInTable="BraceletIdColumn" msprop:Generator_ColumnVarNameInTable="columnBraceletId" msprop:Generator_UserColumnName="BraceletId" type="xs:int" />
              <xs:element name="EnterTime" msprop:Generator_ColumnPropNameInRow="EnterTime" msprop:Generator_ColumnPropNameInTable="EnterTimeColumn" msprop:Generator_ColumnVarNameInTable="columnEnterTime" msprop:Generator_UserColumnName="EnterTime" type="xs:dateTime" />
              <xs:element name="ExitTime" msprop:Generator_ColumnPropNameInRow="ExitTime" msprop:Generator_ColumnPropNameInTable="ExitTimeColumn" msprop:Generator_ColumnVarNameInTable="columnExitTime" msprop:Generator_UserColumnName="ExitTime" type="xs:dateTime" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Bracelets" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Services_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Services" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Transactions_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Transactions" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="Zones_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Zones" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="ZoneVisits_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ZoneVisits" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__Transacti__Brace__76619304" msdata:parent="Bracelets" msdata:child="Transactions" msdata:parentkey="Id" msdata:childkey="BraceletId" msprop:Generator_UserParentTable="Bracelets" msprop:Generator_UserChildTable="Transactions" msprop:Generator_RelationVarName="relationFK__Transacti__Brace__76619304" msprop:Generator_ChildPropName="GetTransactionsRows" msprop:Generator_ParentPropName="BraceletsRow" msprop:Generator_UserRelationName="FK__Transacti__Brace__76619304" />
      <msdata:Relationship name="FK__Transacti__Servi__7755B73D" msdata:parent="Services" msdata:child="Transactions" msdata:parentkey="Id" msdata:childkey="ServiceId" msprop:Generator_UserParentTable="Services" msprop:Generator_UserChildTable="Transactions" msprop:Generator_RelationVarName="relationFK__Transacti__Servi__7755B73D" msprop:Generator_ChildPropName="GetTransactionsRows" msprop:Generator_ParentPropName="ServicesRow" msprop:Generator_UserRelationName="FK__Transacti__Servi__7755B73D" />
      <msdata:Relationship name="FK__ZoneVisit__Brace__72910220" msdata:parent="Bracelets" msdata:child="ZoneVisits" msdata:parentkey="Id" msdata:childkey="BraceletId" msprop:Generator_UserParentTable="Bracelets" msprop:Generator_UserChildTable="ZoneVisits" msprop:Generator_RelationVarName="relationFK__ZoneVisit__Brace__72910220" msprop:Generator_ChildPropName="GetZoneVisitsRows" msprop:Generator_ParentPropName="BraceletsRow" msprop:Generator_UserRelationName="FK__ZoneVisit__Brace__72910220" />
      <msdata:Relationship name="FK__ZoneVisit__ZoneI__719CDDE7" msdata:parent="Zones" msdata:child="ZoneVisits" msdata:parentkey="Id" msdata:childkey="ZoneId" msprop:Generator_UserParentTable="Zones" msprop:Generator_UserChildTable="ZoneVisits" msprop:Generator_RelationVarName="relationFK__ZoneVisit__ZoneI__719CDDE7" msprop:Generator_ChildPropName="GetZoneVisitsRows" msprop:Generator_ParentPropName="ZonesRow" msprop:Generator_UserRelationName="FK__ZoneVisit__ZoneI__719CDDE7" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>